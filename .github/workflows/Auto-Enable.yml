name: Auto-Enable Workflows
on:
  schedule:
    - cron: '0 0 * * 0'  # 每周UTC时间周日午夜运行
  workflow_dispatch:      # 允许手动触发

jobs:
  enable-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Check for disabled workflows
        id: enable
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # 需事先在仓库Settings > Secrets中配置
          REPO: ${{ github.repository }}
        run: |
          # 获取所有被禁用的工作流ID
          response=$(curl -sf -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/actions/workflows")
          
          # 检查API响应是否有效
          if [ -z "$response" ]; then
            echo "::error::Failed to fetch workflows"
            exit 1
          fi

          # 使用jq解析JSON并启用工作流
          disabled_ids=$(echo "$response" | jq -r '.workflows[] | select(.state == "disabled_inactivity") | .id')
          
          if [ -z "$disabled_ids" ]; then
            echo "No disabled workflows found"
            exit 0
          fi

          # 记录启用数量
          count=0
          for id in $disabled_ids; do
            curl -sf -X PUT -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$REPO/actions/workflows/$id/enable"
            
            if [ $? -eq 0 ]; then
              echo "✅ Enabled workflow $id"
              ((count++))
            else
              echo "::warning::Failed to enable workflow $id"
            fi
          done

          # 输出结果供后续步骤使用
          echo "enabled_count=$count" >> $GITHUB_OUTPUT
          
      - name: Notify result
        if: ${{ steps.enable.outputs.enabled_count > 0 }}
        run: |
          echo "Enabled ${{ steps.enable.outputs.enabled_count }} workflows"
          # 可在此添加Slack/邮件通知（需配置对应Action）
